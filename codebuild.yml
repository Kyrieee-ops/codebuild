AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFormation template to build and push Docker images to ECR from GitHub.

Parameters:
  ECRRepositoryName:
    Description: The name of the ECR repository to push the Docker image.
    Type: String
    Default: amazonlinux-repository
  CodeBuildRoleName:
    Description: The CodeBuild role name
    Type: String
    Default: codebuild-role-for-ecr
  CodeBuildProjectName:
    Description: The CodeBuild name
    Type: String
    Default: github-to-ecr-build   
  GitHubConnectionArn:
    Description: The ARN of the GitHub connection for CodePipeline.
    Type: String
  FullRepositoryId:
    Description: The full repository ID to use with your CodeConnections connection.
    Type: String
    Default: "Kyrieee-ops/codebuild"
  BranchName:
    Description: The branch name to use with your GitHub repository.
    Type: String
    Default: master
  CodePipelineName:
    Description: The CodePipeline name that will deploy to your CloudFormation stack.
    Type: String
    Default: codebuild-codepipeline
  CodePipelineSourceActionRoleName:
    Description: The CodePipeline role name for ecr
    Type: String
    Default: codepipeline-source-from-github-role-for-ecr
  CodePipelineRoleName: 
    Description: The CodePipeline role name for codebuild
    Type: String
    Default: codepipeline-role-for-codebuild

Resources:
  # ECRリポジトリの作成
  ECRRepository:
    Type: AWS::ECR::Repository
    Properties:
      RepositoryName: !Sub ${ECRRepositoryName}
      Tags: 
        - Key: Name
          Value: !Sub ${ECRRepositoryName}

# ------------------------------------------------------------#
# CodeBuildがECRにDockerImageをPushするために必要なロール
# codebuild-role-for-ecr
# ------------------------------------------------------------#
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${CodeBuildRoleName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - codebuild.amazonaws.com
            Action: 
              - sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource: !Join
                  - /
                  - - !ImportValue s3bucketbackupArn
                    - '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
              - Effect: Allow
                Action:
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:BatchCheckLayerAvailability
                  - ecr:DescribeRepositories
                  - ecr:GetAuthorizationToken
                Resource: 
                  - "*"

  # CodeBuildプロジェクトの作成
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${CodeBuildProjectName}
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub |
          version: 0.2
          phases:
            env:
              variables:
                IMAGE_REPO_NAME: ${ECRRepositoryName}
                IMAGE_TAG: dev
            pre_build:
              commands:
                - echo Logging in to Amazon ECR...
                - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com 
            build:
              commands:
                - echo Build started on `date`
                - echo Building the Docker image...          
                - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
                - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
            post_build:
              commands:
                - echo Build completed on `date`
                - echo Pushing the Docker image to ECR...
                - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/ $IMAGE_REPO_NAME:$IMAGE_TAG
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        Type: LINUX_CONTAINER
        PrivilegedMode: true # Dockerビルドのために必要
      ServiceRole: !Ref CodeBuildRole
      Artifacts:
        Type: CODEPIPELINE
    # DependsOn: CodeBuildRole # CodeBuildRoleが先に作成されることを保証
      # SourceVersion: !Ref BranchName
      # EnvironmentVariables:
      #   - Name: REPOSITORY_URI
      #     Value: !Sub "${ECRRepository.Arn}"

  # CodePipelineの作成
  CodePipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${CodePipelineName}
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3 # アーティファクトの保存場所をS3に指定
        Location: !ImportValue s3bucketbackup # 事前に作成したS3バケットのインポート
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              Configuration:
                ConnectionArn: !Sub ${GitHubConnectionArn}
                FullRepositoryId: !Sub ${FullRepositoryId}
                BranchName: !Sub ${BranchName}
              OutputArtifacts:
                - Name: SourceOutput
              RoleArn: !GetAtt CodePipelineRole.Arn   
              RunOrder: 1 # 実行順序
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              InputArtifacts:
                - Name: SourceOutput
              Configuration:
                ProjectName: !Sub ${CodeBuildProject}
              # OutputArtifacts:
              #   - Name: BuildOutput
# ------------------------------------------------------------#
# CodePipelineRole
# CodeBuildを実行する用途
# ECRに保存されたイメージを使用する
# ------------------------------------------------------------#
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${CodePipelineRoleName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: 
                - codepipeline.amazonaws.com
            Action: 
              - sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - ecr:GetAuthorizationToken
                  - codestar-connections:UseConnection # GitHub接続を使用するための権限を追加
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:DeleteObject
                  - s3:ListBucket
                # `arn:aws:s3:::${s3bucketbackup}`と`arn:aws:s3:::${s3bucketbackup}/*`イコール
                Resource: 
                - !ImportValue s3bucketbackupArn
                - !Join
                  - '/'
                  - - !ImportValue s3bucketbackupArn
                    - '*'
# ------------------------------------------------------------#
# CodePipelineのソースアクションに必要なロールを定義
# GitHubからコードを取得するアクション
# ECRにイメージをPushする用途
#------------------------------------------------------------#
  CodePipelineSourceActionRole: 
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${CodePipelineSourceActionRoleName}
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              AWS: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:root # 使用しているAWSアカウントに対して権限を引き受けることができる
        Version: '2012-10-17'      
      Policies:
      - PolicyName: CodePipelineSourceActionRoleDefaultPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - codestar-connections:UseConnection
              Resource: !Sub ${GitHubConnectionArn}
            - Effect: Allow
              Action:
                - s3:Abort*
                - s3:DeleteObject*
                - s3:PutObject
                - s3:PutObjectLegalHold
                - s3:PutObjectRetention
                - s3:PutObjectTagging
                - s3:PutObjectVersionTagging # アップロードしたファイルにタグを付与する場合に必要
              Resource:
                - !ImportValue s3bucketbackupArn
                - !Join
                  - '/'
                  - - !ImportValue s3bucketbackupArn
                    - '*'
            - Effect: Allow
              Action:
                - s3:PutObjectAcl
                - s3:PutObjectVersionAcl
              Resource: !Join
                - /
                - - !ImportValue s3bucketbackupArn
                  - '*'
Outputs:
  ECRRepositoryUri:
    Description: "URI of the ECR repository"
    Value: !GetAtt ECRRepository.RepositoryUri